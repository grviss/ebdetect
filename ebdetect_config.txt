## ebdetect_config.txt = configuration file for ebdetect.pro
## Default configuration file version: $Id$
## comment out lines as needed using '#'

################################################################################
########################### INPUT FILES AND SWITCHES ###########################
################################################################################
# optional: input directory. Defaults: current working directory (i.e., './')
#INPUTDIR = ./

# optional: output directory. Defaults: current working directory (i.e., './')
#OUTPUTDIR = ./

# required: data cube in which the detection is going to be done. 
INPUTFILE = lcwsum_halpha.2010.06.28.strt.fcube

# optional: switch to identify that INPUTFILE is a summed cube or not.
# Defaults: 0 (= not a summed cube)
#SUM_CUBE = 1

# optional: 
#LCSUM_CUBE = lcwsum_halpha.2010.06.28.strt.fcube

# optional: data cube with a mask that is used to overlay
#COMPARISON_MASK = 

# optional: initial detection file to start from (result from thresholding
# only). Defaults: ''
#DETECT_INIT_FILE = 

#################### Data characterising keywords and switches
# required: Number of wavelength positions of the input file 
# Defaults: 1 
NLP = 3

# optional: wing positions to sum over
WSUM_POS = [0,2]

# optional: line core positions to sum over
# Defaults: 0
LCSUM_POS = 1


################################################################################
####################### DETECTION PARAMETERS AND SWITCHES ######################
################################################################################

#################### Intensity thresholding ####################
# required: factor to determine the intensity threshold.
# Unless FACTOR_SIGMA is set, the intensity threshold is calculated as: 
#   threshold = mean + sigma_constraint * stdev
# Defaults: 0.
SIGMA_CONSTRAINT = [1.55,1.4]

# optional: switch to state that the threshold should not be obtained by
# multiplying SIGMA_CONSTRAINT by the standard deviation, but rather by
# multiplying SIGMA_CONSTRAINT directly with the mean.
# If set, intensity threshold is calculated as:
#   threshold = mean * sigma_constraint
FACTOR_SIGMA = 1

# optional: apply double intensity criterion 
# Defaults: 0 (= no)
#LOOSE_HYSTERESIS =

# optional: region over which the mean and standard deviation should be
# calculated. Takes either a string filename of a mask cube or a 4-element array
# [x0,y0,x1,y1]
#REGION_THRESHOLD = 

# optional: factor to determine the intensity threshold in the line core. 
# The threshold is calculated as:
#   threshold = lc_mean + lc_sigma * lc_stdev
# Defaults: 0. 
LC_SIGMA = 1.1

# optional: use running MEAN and STDEV instead of overall values. Takes either a
# string filename with the running mean data cube or a scalar integer to specify
# the number of time steps up and down that should be used in computing the
# running mean. Defaults: 0
#RUNNING_MEAN = 

#################### Size thresholding ####################
# optional: size constraint in number of interconnected pixels. Can be only
# lower limit or lower and upper limit (e.g., size_constraint = [5,20]).
# Defaults: [0, nx*ny]
SIZE_CONSTRAINT = 5

# optional: number of pixels that should overlap from one frame to order in
# order to be considered the same detection.
# Defaults: 1
OVERLAP_CONSTRAINT = 1


#################### Lifetime thresholding ####################
# optional: minimum lifetime constraint in number of frames. Can be only lower
# limit or lower and upper limit (e.g., lifetime_constraint = [3,10]). 
# Defaults: [0,nt]
LIFETIME_CONSTRAINT = 3  


#################### Detection grouping ####################
# optional: number of frames that may be skipped to find spatial overlap in
# order to be considered the same detection. The larger the disturbance from
# seeing, the higher the value should be
# Defaults: 0
T_SKIP_CONSTRAINT = 3

# optional: maximum number of frames to look for same label. Useful for time
# series spanning more than 2 hours.
# Defaults: 0 
LIMIT_GROUP_SEARCH = 0

# optional: check for merging features. If so, retains the label of bigger
# feature.
# Defaults: 1 (= yes)
MERGE_CHECK = 1

# optional: override the merging for certain detections. Takes a 4-element array
# with elements [tlow, tupp, oldlabel, newlabel].
#OVERRIDE_MERGE = 

# optional: check for splitting features. If so, bigger feature retains label,
# smaller feature gets new label
# Defaults: 1 (= yes)
SPLIT_CHECK = 1


# optional: save results of bright kernels within detections. Works only if
# SIGMA_CONSTRAINT is a 2-element array, where kernels will be those pixels
# above the highest intensity threshold.
# Defaults: 0 (= no)
GET_KERNELS = 0

# optional: size constraint in number of interconnected pixels for bright
# kernels. Can be only lower limit or lower and upper limit (e.g., 
# kernel_size = [5,10]). 
# Defaults: [0,nx*ny]. Is only used if the GET_KERNELS switch is set.
KERNEL_SIZE = 5

# optional: remove certain false positive detections from the final sample.
#REMOVE_DETECTIONS = 

################################################################################
################################ OUTPUT SWITCHES ###############################
################################################################################
# optional: write a mask cube with all initial detections
# Defaults: 1 (= yes)
WRITE_MASK_CUBE = 1

# optional: write a data file with all initial detections (post-intensity
# thresholding, prior to all other limiting constraints and merging/splitting
# checks)
# Defaults: 1 (= yes)
WRITE_DETECT_INIT = 1

# optional: write a data file with only those detections that overlap within
# lifetime_constraint frames
# Defaults: 1 (= yes)
WRITE_DETECT_OVERLAP = 1

# optional: write a mask cube with detections surviving all limiting constraints
# and accounting for merging/splitting
# Defaults: 1 (= yes)
WRITE_FINAL_MASK_CUBE = 1

# optional: write output cubes in place (using LP_PUT) or not (using LP_WRITE).
# Defaults: 1 (= yes)
WRITE_INPLACE = 1 
